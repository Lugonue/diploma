name: Build and Deploy

on:
  push:
    branches:
      - main # Запускать только при пуше в ветку main

jobs:
  build-and-deploy:
    runs-on: self-hosted # Используйте Self-Hosted Runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Укажите '20' для последней версии Node.js 20.x.x

        # Шаг : Установка yarn
      - name: Install yarn
        run: npm install -g yarn

        # Установка последней версии Node.js
      - name: Create .env file
        run: |
          echo "NODE_ENV=production" >> ./backend/.env
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" >> ./backend/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ./backend/.env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ./backend/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> ./backend/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./backend/.env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> ./backend/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> ./backend/.env

          echo "POSTGRES_USER=${{ secrets.DB_USERNAME }}" >> ./backend/.env
          echo "POSTGRES_DB=${{ secrets.DB_DATABASE }}" >> ./backend/.env
          echo "POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./backend/.env

      # Шаг: Сборка бэкенда
      - name: Build & run backend
        run: docker compose up -d --build
        env:
          NODE_ENV: production

      # Шаг : Сборка фронтенда
      - name: Install dependencies
        run: |
          cd ./frontend
          yarn install
      - name: Build frontend
        run: |
          cd ./frontend
          yarn build
          sudo cp -r ./dist/* /var/www/diploma/frontend
        env:
          NODE_ENV: production

      # Шаг настройка nginx
      # - name: Configure Nginx
      #   run: |
      #     chmod +x ./configure-nginx.sh
      #     ./configure-nginx.sh
